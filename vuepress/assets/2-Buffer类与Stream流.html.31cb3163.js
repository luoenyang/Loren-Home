import{_ as s,p as a}from"./app.5c80a7c1.js";const p={};function t(e,n){return n[0]||(n[0]=a(`<h1 id="buffer\u7C7B" tabindex="-1"><a class="header-anchor" href="#buffer\u7C7B" aria-hidden="true">#</a> Buffer\u7C7B</h1><blockquote><ul><li>JavaScript \u8BED\u8A00\u81EA\u8EAB\u53EA\u6709\u5B57\u7B26\u4E32\u6570\u636E\u7C7B\u578B\uFF0C\u6CA1\u6709\u4E8C\u8FDB\u5236\u6570\u636E\u7C7B\u578B\u3002</li><li>\u5F53\u64CD\u4F5C\u6587\u4EF6\u6D41\u65F6\u9700\u4F7F\u7528\u4E8C\u8FDB\u5236\uFF0Cnode\u5B9A\u4E49Buffer\u7C7B\u5C31\u662F\u4E13\u95E8\u5B58\u653E\u4E8C\u8FDB\u5236\u6570\u636E\u7684\u7F13\u5B58\u533A\u3002</li></ul></blockquote><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFAbuffer</span>
<span class="token keyword">var</span> b<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span><span class="token string">&quot;someString&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5199\u5165buffer</span>
b<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;otherString&quot;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BFB\u53D6buffer\u6570\u636E</span>
b<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>

<span class="token comment">// \u8F6C\u5316\u4E3Ajson</span>
b<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5408\u5E76</span>
b1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u62F7\u8D1D</span>
b<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u88C1\u526A</span>
b<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6BD4\u8F83</span>
b1<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div></details><h1 id="stream\u6D41" tabindex="-1"><a class="header-anchor" href="#stream\u6D41" aria-hidden="true">#</a> Stream\u6D41</h1><blockquote><p>Stream\u662F\u4E00\u4E2A\u62BD\u8C61\u63A5\u53E3\uFF0Chttp\u8BF7\u6C42request \u5BF9\u8C61\u5C31\u662F\u4E00\u4E2A Stream\u3002 \u4E00\u822C\u7528\u4E8E\u6587\u4EF6\u7684\u4F20\u8F93\u3002<br> 4\u79CD\u7C7B\u578B\uFF1A\u53EF\u8BFB\uFF0C\u53EF\u5199\uFF0C\u53EF\u8BFB\u53EF\u5199\uFF0C\u8F6C\u6362</p></blockquote><blockquote><p>\u4E8B\u4EF6\uFF1A</p><ol><li>data - \u5F53\u6709\u6570\u636E\u53EF\u8BFB\u65F6\u89E6\u53D1\u3002</li><li>end - \u6CA1\u6709\u66F4\u591A\u7684\u6570\u636E\u53EF\u8BFB\u65F6\u89E6\u53D1\u3002</li><li>error - \u5728\u63A5\u6536\u548C\u5199\u5165\u8FC7\u7A0B\u4E2D\u53D1\u751F\u9519\u8BEF\u65F6\u89E6\u53D1\u3002</li><li>finish - \u6240\u6709\u6570\u636E\u5DF2\u88AB\u5199\u5165\u5230\u5E95\u5C42\u7CFB\u7EDF\u65F6\u89E6\u53D1\u3002</li></ol></blockquote><details class="custom-container details"><summary>\u8BFB\u53D6\u6D41\u6570\u636E</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165\u6A21\u5757</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B58\u653E\u6570\u636E</span>
<span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u53EF\u8BFB\u6D41</span>
<span class="token keyword">var</span> readerStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&quot;/test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u8BBE\u7F6E\u7F16\u7801</span>
readerStream<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">&#39;UTF8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u5904\u7406\u4E8B\u4EF6\u6D41</span>
readerStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    data<span class="token operator">+=</span>s<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
readerStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
readerStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
readerStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></details><details class="custom-container details"><summary>\u5199\u5165\u6D41\u6570\u636E</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165\u6A21\u5757</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6587\u672C</span>
<span class="token keyword">var</span> data <span class="token operator">=</span><span class="token string">&quot;\u8FD9\u662F\u4E00\u4E2A\u5199\u5982\u6D41\u7684\u6587\u672C\u3002&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u53EF\u4EE5\u5199\u5165\u7684\u6D41\uFF0Ctest.txt \u5B58\u653E\u5199\u5165\u7684\u6570\u636E</span>
<span class="token keyword">var</span> writerStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&quot;../test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4F7F\u7528\u7F16\u7801 UTF8 \u5199\u5165\u6570\u636E</span>
writerStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token string">&#39;UTF8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5173\u95ED\u6D41</span>
writerStream<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></details><h3 id="\u7BA1\u9053\u6D41" tabindex="-1"><a class="header-anchor" href="#\u7BA1\u9053\u6D41" aria-hidden="true">#</a> \u7BA1\u9053\u6D41</h3><blockquote><p>\u901A\u5E38\u6211\u4EEC\u7528\u4E8E\u4ECE\u4E00\u4E2A\u6D41\u4E2D\u83B7\u53D6\u6570\u636E\u5E76\u5C06\u6570\u636E\u4F20\u9012\u5230\u53E6\u5916\u4E00\u4E2A\u6D41\u4E2D\u3002</p></blockquote><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u5217</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165\u6A21\u5757</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u53EF\u8BFB\u6D41</span>
<span class="token keyword">var</span> readerStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&quot;../get/test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u53EF\u5199\u7684\u6D41</span>
<span class="token keyword">var</span> writerStram <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&quot;../set/test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7BA1\u9053\u7684\u8BFB\u5199\u64CD\u4F5C\uFF0C\u628A\u8BFB\u53D6\u7684\u5199\u5230\u53EF\u5199\u7684\u6D41\u4E2D</span>
readerStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writerStram<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></details><h3 id="\u94FE\u5F0F\u6D41" tabindex="-1"><a class="header-anchor" href="#\u94FE\u5F0F\u6D41" aria-hidden="true">#</a> \u94FE\u5F0F\u6D41</h3><blockquote><p>\u94FE\u5F0F\u662F\u901A\u8FC7\u8FDE\u63A5\u8F93\u51FA\u6D41\u5230\u53E6\u5916\u4E00\u4E2A\u6D41\u5E76\u521B\u5EFA\u591A\u4E2A\u5BF9\u4E2A\u6D41\u64CD\u4F5C\u94FE\u7684\u673A\u5236\u3002</p></blockquote><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u5217</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165\u6A21\u5757</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> zlib <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zlib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u538B\u7F29 </span>
<span class="token comment">// test.txt \u538B\u7F29\u6587\u4EF6\u4E3A test.txt.gz</span>
<span class="token keyword">var</span> r <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;/test&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>zlib<span class="token punctuation">.</span><span class="token function">createGzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;/test.txt.gz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token comment">// \u89E3\u538B</span>
<span class="token comment">// \u538B\u7F29\u5B8C\u7ACB\u5373\u89E3\u538B</span>
r<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6587\u4EF6\u538B\u7F29\u5B8C\u6210\uFF01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u73B0\u5728\u5F00\u59CB\u89E3\u538B\uFF01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// test.txt.gz \u89E3\u538B\u6587\u4EF6\u4E3A test.txt</span>
   <span class="token keyword">var</span> d <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;/test.txt.gz&#39;</span><span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>zlib<span class="token punctuation">.</span><span class="token function">createGunzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;/test.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   d<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6587\u4EF6\u89E3\u538B\u5B8C\u6210\u3002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></details>`,14))}var o=s(p,[["render",t],["__file","2-Buffer\u7C7B\u4E0EStream\u6D41.html.vue"]]);export{o as default};
