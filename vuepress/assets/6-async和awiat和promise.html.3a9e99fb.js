import{_ as s,p as a}from"./app.5c80a7c1.js";const p={};function t(e,n){return n[0]||(n[0]=a(`<h1 id="async\u3001await\u3001promise" tabindex="-1"><a class="header-anchor" href="#async\u3001await\u3001promise" aria-hidden="true">#</a> async\u3001await\u3001promise</h1><h3 id="async\u548Cawait\u7684\u5E95\u5C42\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#async\u548Cawait\u7684\u5E95\u5C42\u5B9E\u73B0" aria-hidden="true">#</a> async\u548Cawait\u7684\u5E95\u5C42\u5B9E\u73B0</h3><ol><li><p>async\u51FD\u6570\u7684\u8F6C\u6362\uFF1A<br> \u5F53JavaScript\u5F15\u64CE\u9047\u5230\u4E00\u4E2Aasync\u51FD\u6570\u65F6\uFF0C\u5B83\u4F1A\u81EA\u52A8\u5C06\u8FD9\u4E2A\u51FD\u6570\u8F6C\u6362\u4E3A\u4E00\u4E2A\u8FD4\u56DEPromise\u5BF9\u8C61\u7684\u51FD\u6570\u3002\u8FD9\u4E2A\u8FD4\u56DE\u7684Promise\u5BF9\u8C61\u4F1A\u7BA1\u7406async\u51FD\u6570\u5185\u90E8\u7684\u5F02\u6B65\u64CD\u4F5C\u3002\u53EF\u4EE5\u5728async\u51FD\u6570\u5185\u90E8\u4F7F\u7528await\u8868\u8FBE\u5F0F\u6765\u6682\u505C\u5F02\u6B65\u64CD\u4F5C\u7684\u6267\u884C\uFF0C\u76F4\u5230Promise\u89E3\u6790\u5B8C\u6210\uFF0C\u7136\u540E\u7EE7\u7EED\u6267\u884Casync\u51FD\u6570\u5E76\u8FD4\u56DE\u7ED3\u679C\u3002</p></li><li><p>await\u8868\u8FBE\u5F0F\uFF1A<br> await\u5173\u952E\u5B57\u7528\u4E8E\u7B49\u5F85\u4E00\u4E2APromise\u5BF9\u8C61\u3002\u5B83\u53EA\u80FD\u5728async\u51FD\u6570\u5185\u90E8\u4F7F\u7528\u3002\u5F53await\u4E00\u4E2APromise\u65F6\uFF0C\u5B83\u4F1A\u6682\u505Casync\u51FD\u6570\u7684\u6267\u884C\uFF0C\u76F4\u5230Promise\u89E3\u51B3\uFF08resolve\uFF09\u6216\u62D2\u7EDD\uFF08reject\uFF09\u3002\u5982\u679CPromise\u88AB\u89E3\u51B3\uFF0Cawait\u8868\u8FBE\u5F0F\u7684\u7ED3\u679C\u5C31\u662FPromise\u89E3\u51B3\u65F6\u7684\u503C\u3002</p></li></ol><h1 id="promise\u5E95\u5C42\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#promise\u5E95\u5C42\u5B9E\u73B0" aria-hidden="true">#</a> promise\u5E95\u5C42\u5B9E\u73B0</h1><h3 id="promise\u7684\u57FA\u672C\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#promise\u7684\u57FA\u672C\u7ED3\u6784" aria-hidden="true">#</a> Promise\u7684\u57FA\u672C\u7ED3\u6784</h3><ol><li><p>\u6784\u9020\u51FD\u6570 Promise\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684Promise\u5B9E\u4F8B\u3002\u5B83\u63A5\u6536\u4E00\u4E2A\u6267\u884C\u5668\u51FD\u6570\uFF08executor function\uFF09\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8FD9\u4E2A\u6267\u884C\u5668\u51FD\u6570\u6709\u4E24\u4E2A\u53C2\u6570\uFF1Aresolve\u548Creject\uFF0C\u5B83\u4EEC\u90FD\u662F\u51FD\u6570\uFF0C\u5206\u522B\u7528\u4E8E\u5C06Promise\u7684\u72B6\u6001\u4ECEpending\uFF08\u8FDB\u884C\u4E2D\uFF09\u6539\u4E3Afulfilled\uFF08\u5DF2\u6210\u529F\uFF09\u6216rejected\uFF08\u5DF2\u5931\u8D25\uFF09\u3002</p></li><li><p>\u72B6\u6001\u7BA1\u7406\uFF1Apending\uFF08\u8FDB\u884C\u4E2D\uFF09\u3001fulfilled\uFF08\u5DF2\u6210\u529F\uFF09\u3001rejected\uFF08\u5DF2\u5931\u8D25\uFF09\uFF1B\u53EA\u80FD\u4ECEpending\u53D8\u4E3Afulfilled\u6216rejected\uFF0C\u4E14\u4E00\u65E6\u72B6\u6001\u6539\u53D8\uFF0C\u5C31\u4E0D\u80FD\u518D\u53D8\u3002</p></li><li><p>\u7ED3\u679C\u6570\u636E\uFF1A\u901A\u8FC7resolve\u548Creject\u8FD4\u56DE\u3002</p></li></ol><h3 id="promise\u7684\u5E95\u5C42\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#promise\u7684\u5E95\u5C42\u5B9E\u73B0" aria-hidden="true">#</a> Promise\u7684\u5E95\u5C42\u5B9E\u73B0</h3><ol><li>\u5B9E\u4F8B\u5C5E\u6027\uFF1Astatus\uFF08\u72B6\u6001\uFF09\u548Cvalue/reason</li><li>\u5185\u90E8\u51FD\u6570\uFF1A_resolve\u548C_reject\uFF0C\u7528\u4E8E\u66F4\u65B0Promise\u7684\u72B6\u6001\u548C\u7ED3\u679C\u6570\u636E\u3002</li><li>\u6267\u884C\u5668\u51FD\u6570\u7684\u6267\u884C\uFF1APromise\u6784\u9020\u51FD\u6570\u88AB\u8C03\u7528\u65F6\uFF0C\u4F1A\u7ACB\u5373\u6267\u884C\u4F20\u5165\u7684\u6267\u884C\u5668\u51FD\u6570\uFF0C\u5E76\u4F20\u5165_resolve\u548C_reject\u4F5C\u4E3A\u53C2\u6570\u3002</li><li>then\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF1Apromise\u539F\u578B\u4E0A\u5B9A\u4E49\u4E86then\u65B9\u6CD5\uFF0C\u7528\u4E8E\u6210\u529F\u548C\u5931\u8D25\u7684\u56DE\u8C03\u51FD\u6570\u3002then\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684Promise\u5B9E\u4F8B\uFF0C\u4EE5\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u3002</li><li>\u5FAE\u4EFB\u52A1\u961F\u5217\uFF1Apromise\u7684\u56DE\u8C03\u51FD\u6570\uFF08\u5305\u62ECthen\u3001catch\u7B49\uFF09\u4F1A\u88AB\u6DFB\u52A0\u5230\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\uFF0C\u7B49\u5F85\u5F53\u524D\u6267\u884C\u6808\u6E05\u7A7A\u540E\u6267\u884C\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyPromise</span> <span class="token punctuation">{</span>  
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u72B6\u6001\u4E3Apending  </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// \u6210\u529F\u7684\u7ED3\u679C  </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// \u5931\u8D25\u7684\u539F\u56E0  </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onFulfilledCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u6210\u529F\u56DE\u8C03\u7684\u6570\u7EC4  </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5931\u8D25\u56DE\u8C03\u7684\u6570\u7EC4  </span>
  
        <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">;</span>  
                <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>  
                <span class="token keyword">this</span><span class="token punctuation">.</span>onFulfilledCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span><span class="token punctuation">;</span>  
  
        <span class="token keyword">const</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">;</span>  
                <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>  
                <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span><span class="token punctuation">;</span>  
  
        <span class="token keyword">try</span> <span class="token punctuation">{</span>  
            <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
  
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span>onFulfilledCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
  
<span class="token comment">// \u4F7F\u7528\u793A\u4F8B  </span>
<span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">// reject(&#39;\u5931\u8D25&#39;);  </span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>  
    <span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u8F93\u51FA &#39;\u6210\u529F&#39;  </span>
    <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>  
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h3 id="_1-async" tabindex="-1"><a class="header-anchor" href="#_1-async" aria-hidden="true">#</a> 1. async</h3><blockquote><ul><li>\u7406\u89E3\u4E3A\uFF1A\u7528\u4E8E\u58F0\u660E\u4E00\u4E2Afunction\u662F\u5F02\u6B65\u7684\uFF0C\u5E76\u4E14\u8FD4\u56DE\u7684\u662F\u4E00\u4E2Apromise\u5BF9\u8C61</li></ul></blockquote><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD4\u56DE\u7684\u662F promise \u5BF9\u8C61</span>
<span class="token keyword">let</span> a<span class="token operator">=</span><span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 

<span class="token comment">// \u7528\u8FC7then() \u83B7\u53D6\u8FD4\u56DE\u503C</span>
a<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>


<span class="token comment">// \u9519\u8BEF\u5904\u7406</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// await \u987B\u5728 async\u51FD\u6570\u4E2D\u624D\u53EF\u4F7F\u7528</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> val1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">firstStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> val2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">secondStep</span><span class="token punctuation">(</span>val1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> val3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">thirdStep</span><span class="token punctuation">(</span>val1<span class="token punctuation">,</span> val2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Final: &#39;</span><span class="token punctuation">,</span> val3<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u9519\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></details><h3 id="_2-await" tabindex="-1"><a class="header-anchor" href="#_2-await" aria-hidden="true">#</a> 2. await</h3><blockquote><ul><li>\u7528\u4E8E\u7B49\u5F85\u4E00\u4E2A\u540C\u6B65/\u5F02\u6B65\u65B9\u6CD5\u6267\u884C\u5B8C\u6210(\u540C\u6B65\u7B49\u5F85)\uFF0Cawait\u5FC5\u987B\u5728async\u65B9\u6CD5\u4E2D\u624D\u53EF\u4EE5\u4F7F\u7528\u3002</li></ul></blockquote><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">testA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testA2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;xxxx&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testA3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// await \u987B\u5728 async\u51FD\u6570\u4E2D\u624D\u53EF\u4F7F\u7528</span>

  <span class="token comment">// \u7B49\u5F85\u666E\u901A\u51FD\u6570\u8FD4\u56DE &#39;heelo world&#39;</span>
  <span class="token keyword">const</span> a1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">testA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5F85\u4F1A\u8FD4\u56DEpromise\u5BF9\u8C61\u7684resolve\u7684\u503C\uFF0C\u624D\u4F1A\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C</span>
  <span class="token keyword">const</span> a2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">testA2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token string">&#39;--&#39;</span> <span class="token operator">+</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4F1A\u6253\u5370 hello world--xxxx</span>
<span class="token punctuation">}</span>

<span class="token function">testA3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></details><h3 id="_3-promise" tabindex="-1"><a class="header-anchor" href="#_3-promise" aria-hidden="true">#</a> 3. promise</h3><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">function</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E70\u597D\u83DC\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token constant">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E70\u597D\u8089\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D17\u7C73\u597D\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//  1. \u987A\u5E8F\u505A\u65F6\u7528\u56DE\u8C03\u51FD\u6570\uFF0C\u5D4C\u5957\u3002</span>
<span class="token comment">//  2. \u5E76\u53D1\u505A\uFF0C\u4E09\u4E2A\u51FD\u6570\u5E76\u5217\u5199\u3002</span>
<span class="token comment">//  3. \u4EA4\u96C6\u505A\uFF0C\u5982\u5148\u505A\u4E70\u83DC\uFF0C\u4E70\u8089\uFF0C\u518D\u505A\u6D17\u7C73\uFF0C\u5219 \u4F7F\u7528\u8BA1\u6570\u5668\u4E70\u5B8C\u83DC+1\uFF0C\u4E70\u5B8C\u8089+1\uFF0C==2\u65F6\u6267\u884C\u6D17\u7C73</span>
		
		
<span class="token comment">//	\u987A\u5E8F\u505A\u65F6   </span>
<span class="token comment">//      \u4F7F\u7528\u5B83\u6709\u4E00\u4E2A\u7F3A\u70B9 \u5C31\u662F\u5F88\u591Athen,</span>
<span class="token comment">//      then\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662FResolved\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF08\u53EF\u9009\uFF09\u662FRejected\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\u3002</span>
		<span class="token constant">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
		    <span class="token keyword">return</span> <span class="token constant">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
		    <span class="token keyword">return</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
		    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u53EF\u4EE5\u716E\u996D\u5566~~~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		
		
<span class="token comment">// //		\u5E76\u53D1\u505A</span>
<span class="token comment">// 		Promise.all([A(), B(), C()]).then(function (result) {</span>
<span class="token comment">// 		    console.log(result); //[&quot;\u4E70\u597D\u83DC\u4E86&quot;, &quot;\u4E70\u597D\u8089\u4E86&quot;, &quot;\u6D17\u7C73\u597D\u4E86&quot;]</span>
<span class="token comment">// 		});</span>
		
		
		
<span class="token comment">// //		\u4EA4\u96C6\u505A</span>
<span class="token comment">//      Promise.all([A(), B()]).then(function (result) {</span>
<span class="token comment">//      	console.log(result); //[&quot;\u4E70\u597D\u83DC\u4E86&quot;, &quot;\u4E70\u597D\u8089\u4E86&quot;]</span>
<span class="token comment">//      	return C();</span>
<span class="token comment">// 		}).then(function (result){</span>
<span class="token comment">// 			console.log(result); //[&quot;\u6D17\u7C73\u597D\u4E86&quot;]</span>
<span class="token comment">// 		})</span>
	
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div></details><h3 id="_4-async-await-promise" tabindex="-1"><a class="header-anchor" href="#_4-async-await-promise" aria-hidden="true">#</a> 4. async + await + promise</h3><blockquote><ul><li>promise\u53EA\u662F\u89E3\u51B3\u4E86\u56DE\u8C03\u5D4C\u5957\u7684\u95EE\u9898\uFF0C\u5E76\u6CA1\u6709\u89E3\u51B3\u56DE\u8C03\u672C\u8EAB\uFF0C\u7ED3\u5408\u4F7F\u7528\u66F4\u597D</li></ul></blockquote><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&#39;xxxxx&#39;</span><span class="token punctuation">;</span> <span class="token comment">// url \u5730\u5740</span>
<span class="token keyword">let</span> <span class="token function-variable function">asyncFn</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getData</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">getData</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u4E0B\u7B80\u5355\u7684\u4F7F\u7528 ajax\u6765\u6F14\u793A\u4E0B\uFF0C\u9879\u76EE\u4E2D\u5177\u4F53\u4F7F\u7528fetch\u8FD8\u662F\u5176\u4ED6\u90FD\u53EF\u4EE5\u7684</span>
    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div></details><h3 id="\u5F02\u6B65\u7684\u51E0\u79CD\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7684\u51E0\u79CD\u65B9\u5F0F" aria-hidden="true">#</a> \u5F02\u6B65\u7684\u51E0\u79CD\u65B9\u5F0F</h3><ul><li>\u56DE\u8C03\u51FD\u6570</li><li>\u4E8B\u4EF6\u76D1\u542C</li><li>promise</li><li>async/await</li><li>\u200CGenerator \u751F\u6210\u5668\uFF0C\u521B\u5EFA\u5B9E\u4F8B\u65F6\u8FD4\u56DE\u7684\u662F\u904D\u5386\u5668 \u901A\u8FC7yield\u5173\u952E\u5B57\u8FD4\u56DE\u7ED3\u679C\uFF0C.next()\u9010\u6B65\u6267\u884C\uFF0C\u4E00\u6B21\u6267\u884C\u4E00\u4E2Ayield,.value\u53D6\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> iterator<span class="token operator">=</span><span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// 1</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// 2</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>\u53D1\u5E03/\u8BA2\u9605\u6A21\u5F0F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u7B80\u5355\u7684\u4E8B\u4EF6\u603B\u7EBF</span>
<span class="token keyword">class</span> <span class="token class-name">EventBus</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>handlers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token comment">// \u8BA2\u9605\u4E8B\u4EF6</span>
    <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token comment">// \u53D1\u5E03\u4E8B\u4EF6</span>
    <span class="token function">publish</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">handler</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">handler</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
<span class="token comment">// \u4F7F\u7528\u793A\u4F8B</span>
<span class="token keyword">const</span> eventBus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventBus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// \u8BA2\u9605\u4E8B\u4EF6</span>
eventBus<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;user-logged-in&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6B22\u8FCE </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>user<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u767B\u5F55</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// \u53D1\u5E03\u4E8B\u4EF6</span>
eventBus<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span><span class="token string">&#39;user-logged-in&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Alice&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div>`,25))}var c=s(p,[["render",t],["__file","6-async\u548Cawiat\u548Cpromise.html.vue"]]);export{c as default};
