import{_ as s,p as a}from"./app.5c80a7c1.js";const p={};function t(e,n){return n[0]||(n[0]=a(`<h1 id="\u6587\u4EF6\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u8F6C\u6362" aria-hidden="true">#</a> \u6587\u4EF6\u8F6C\u6362</h1><h3 id="\u751F\u6210url\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210url\u5BF9\u8C61" aria-hidden="true">#</a> \u751F\u6210URL\u5BF9\u8C61</h3><details class="custom-container details"><summary>URL</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// file \u3001blob</span>


<span class="token comment">// \u5C06url\u52A0\u8F7D\u8F6C\u4E3A\u6587\u4EF6\uFF1A \u672C\u5730\u6587\u4EF6\u662F\u4E0D\u53EF\u4EE5\u52A0\u8F7D\u7684\uFF0C\u4F46\u901A\u8FC7createObjectURL\u8F6C\u5316\u7684\u5C31\u53EF\u4EE5\uFF0C\u56E0\u4E3A\u6D4F\u89C8\u5668\u6709\u5185\u5B58\u7BA1\u7406</span>
<span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment">// \u5C06 Response \u5BF9\u8C61\u8F6C\u6362\u4E3A Blob \u5BF9\u8C61  </span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">blob</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>blob<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06 Blob \u5BF9\u8C61\u8F6C\u6362\u4E3A File \u5BF9\u8C61</span>
    <span class="token comment">// \u4F7F\u7528 file \u8FDB\u884C\u540E\u7EED\u64CD\u4F5C  </span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></details><h3 id="\u5C06\u6587\u4EF6\u8F6C\u4E3Abase64" tabindex="-1"><a class="header-anchor" href="#\u5C06\u6587\u4EF6\u8F6C\u4E3Abase64" aria-hidden="true">#</a> \u5C06\u6587\u4EF6\u8F6C\u4E3Abase64</h3><details class="custom-container details"><summary>\u5C06\u6587\u4EF6\u8F6C\u4E3Abase64</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">readFileAsBase64</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C06\u6587\u4EF6\u8F6Cbase64</span>
<span class="token keyword">var</span> base64Data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFileAsBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details><h3 id="\u5C06base64\u8F6Cblob" tabindex="-1"><a class="header-anchor" href="#\u5C06base64\u8F6Cblob" aria-hidden="true">#</a> \u5C06base64\u8F6CBlob</h3><details class="custom-container details"><summary>\u5C06base64\u8F6CBlob</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C06base64\u8F6CBlob</span>
<span class="token keyword">function</span> <span class="token function">base64ToBlob</span><span class="token punctuation">(</span><span class="token parameter">base64Data<span class="token punctuation">,</span> contentType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    contentType <span class="token operator">=</span> contentType <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> sliceSize <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> byteCharacters <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> bytesLength <span class="token operator">=</span> byteCharacters<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">var</span> slicesCount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>bytesLength <span class="token operator">/</span> sliceSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> byteArrays <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>slicesCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> sliceIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> sliceIndex <span class="token operator">&lt;</span> slicesCount<span class="token punctuation">;</span> <span class="token operator">++</span>sliceIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> begin <span class="token operator">=</span> sliceIndex <span class="token operator">*</span> sliceSize<span class="token punctuation">;</span>
        <span class="token keyword">var</span> end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>begin <span class="token operator">+</span> sliceSize<span class="token punctuation">,</span> bytesLength<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">var</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>end <span class="token operator">-</span> begin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> offset <span class="token operator">=</span> begin<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> offset <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">,</span> <span class="token operator">++</span>offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            bytes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> byteCharacters<span class="token punctuation">[</span>offset<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        byteArrays<span class="token punctuation">[</span>sliceIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span>byteArrays<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> contentType <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> blob <span class="token operator">=</span> <span class="token function">base64ToBlob</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">,</span> <span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;image/png&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div></details><h3 id="\u5C06base64\u8F6C\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5C06base64\u8F6C\u6587\u4EF6" aria-hidden="true">#</a> \u5C06base64\u8F6C\u6587\u4EF6</h3><details class="custom-container details"><summary>\u5C06base64\u8F6C\u6587\u4EF6</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">base64ToFile</span><span class="token punctuation">(</span><span class="token parameter">base64Data<span class="token punctuation">,</span> outFileName<span class="token punctuation">,</span> contentType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    contentType <span class="token operator">=</span> contentType <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> base64String <span class="token operator">=</span> base64Data<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;base64,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> bytes <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">atob</span><span class="token punctuation">(</span>base64String<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> ab <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token keyword">var</span> ia <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>ab<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ia<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> bytes<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>ab<span class="token punctuation">]</span><span class="token punctuation">,</span> outFileName<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> contentType <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> file<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token function">base64ToFile</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">,</span> <span class="token string">&#39;test.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;image/png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></details><h3 id="canvas\u8F6Cbase64" tabindex="-1"><a class="header-anchor" href="#canvas\u8F6Cbase64" aria-hidden="true">#</a> canvas\u8F6Cbase64</h3><details class="custom-container details"><summary>canvas\u8F6Cbase64</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// file \u3001blob</span>

<span class="token comment">// \u5728\u753B\u5E03\u4E0A\u753B\u51FA\u56FE\u7247\uFF0C\u7136\u540E\u628A\u753B\u5E03\u56FE\u7247\u8F6Cbase64</span>
<span class="token comment">// \u521B\u5EFA\u65B0\u7684Image\u5BF9\u8C61  </span>
<span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
image<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u5F85\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210  </span>
image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2Acanvas\u5143\u7D20\uFF0C\u5E76\u5C06\u56FE\u7247\u7ED8\u5236\u5230canvas\u4E0A  </span>
    <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span>width<span class="token punctuation">,</span> image<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06canvas\u56FE\u7247\u8F6C\u6362\u4E3ABase64\u7F16\u7801\u7684\u5B57\u7B26\u4E32</span>
    <span class="token keyword">const</span> base64Data <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></details><h3 id="\u6587\u4EF6\u81EA\u52A8\u4E0B\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u81EA\u52A8\u4E0B\u8F7D" aria-hidden="true">#</a> \u6587\u4EF6\u81EA\u52A8\u4E0B\u8F7D</h3><details class="custom-container details"><summary>\u81EA\u52A8\u4E0B\u8F7D</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u81EA\u52A8\u4E0B\u8F7D</span>
<span class="token keyword">var</span> downloadelement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
downloadelement<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
downloadelement<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&#39;test.png&#39;</span><span class="token punctuation">;</span>
downloadelement<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><h3 id="\u5168\u90E8" tabindex="-1"><a class="header-anchor" href="#\u5168\u90E8" aria-hidden="true">#</a> \u5168\u90E8</h3><details class="custom-container details"><summary>\u5168\u90E8</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C06\u6587\u4EF6\u8F6C\u4E3Abase64</span>
<span class="token keyword">function</span> <span class="token function">readFileAsBase64</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C06base64\u8F6CBlob</span>
<span class="token keyword">function</span> <span class="token function">base64ToBlob</span><span class="token punctuation">(</span><span class="token parameter">base64Data<span class="token punctuation">,</span> contentType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    contentType <span class="token operator">=</span> contentType <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> sliceSize <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> byteCharacters <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> bytesLength <span class="token operator">=</span> byteCharacters<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">var</span> slicesCount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>bytesLength <span class="token operator">/</span> sliceSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> byteArrays <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>slicesCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> sliceIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> sliceIndex <span class="token operator">&lt;</span> slicesCount<span class="token punctuation">;</span> <span class="token operator">++</span>sliceIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> begin <span class="token operator">=</span> sliceIndex <span class="token operator">*</span> sliceSize<span class="token punctuation">;</span>
        <span class="token keyword">var</span> end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>begin <span class="token operator">+</span> sliceSize<span class="token punctuation">,</span> bytesLength<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">var</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>end <span class="token operator">-</span> begin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> offset <span class="token operator">=</span> begin<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> offset <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">,</span> <span class="token operator">++</span>offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            bytes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> byteCharacters<span class="token punctuation">[</span>offset<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        byteArrays<span class="token punctuation">[</span>sliceIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span>byteArrays<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> contentType <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C06base64\u8F6C\u6587\u4EF6</span>
<span class="token keyword">function</span> <span class="token function">base64ToFile</span><span class="token punctuation">(</span><span class="token parameter">base64Data<span class="token punctuation">,</span> outFileName<span class="token punctuation">,</span> contentType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    contentType <span class="token operator">=</span> contentType <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> base64String <span class="token operator">=</span> base64Data<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;base64,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> bytes <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">atob</span><span class="token punctuation">(</span>base64String<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> ab <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token keyword">var</span> ia <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>ab<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ia<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> bytes<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>ab<span class="token punctuation">]</span><span class="token punctuation">,</span> outFileName<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> contentType <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> file<span class="token punctuation">;</span>
<span class="token punctuation">}</span>






<span class="token comment">// \u5C06\u6587\u4EF6\u8F6Cbase64</span>
<span class="token keyword">var</span> base64file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFileAsBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// imgField.setHtml(&#39;&lt;img style=&quot;height:200px;width:auto;&quot; src=&quot;&#39; + base64file + &#39;&quot; /&gt;&#39;);</span>


<span class="token comment">// // \u5C06base64\u8F6Cblob \u5E76\u751F\u6210url</span>
<span class="token comment">// var blob = base64ToBlob(base64file, &#39;image/jpeg&#39;) // &#39;image/png&#39;</span>
<span class="token comment">// // \u521B\u5EFA\u4E00\u4E2A\u8868\u793A\u5BF9\u8C61\uFF08\u901A\u5E38\u662F Blob \u6216 File \u5BF9\u8C61\uFF09\u7684 URL\u3002\u8FD9\u4E2A URL \u53EF\u4EE5\u88AB\u7528\u4E8E\u5C06\u5BF9\u8C61\u5D4C\u5165\u5230\u7F51\u9875\u4E2D\uFF0C\u6216\u8005\u7528\u4E8E\u4E0B\u8F7D\u5BF9\u8C61</span>
<span class="token comment">// var url = window.URL.createObjectURL(blob);</span>
<span class="token comment">// imgField.setHtml(&#39;&lt;img style=&quot;height:200px;width:auto;&quot; src=&quot;&#39; + url + &#39;&quot; /&gt;&#39;);</span>


<span class="token comment">// \u5C06base64\u8F6C\u6587\u4EF6 \u5E76\u751F\u6210url</span>
<span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token function">base64ToFile</span><span class="token punctuation">(</span>base64file<span class="token punctuation">,</span> <span class="token string">&#39;test.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;image/png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u8868\u793A\u5BF9\u8C61\uFF08\u901A\u5E38\u662F Blob \u6216 File \u5BF9\u8C61\uFF09\u7684 URL\u3002\u8FD9\u4E2A URL \u53EF\u4EE5\u88AB\u7528\u4E8E\u5C06\u5BF9\u8C61\u5D4C\u5165\u5230\u7F51\u9875\u4E2D\uFF0C\u6216\u8005\u7528\u4E8E\u4E0B\u8F7D\u5BF9\u8C61</span>
<span class="token keyword">var</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
imgField<span class="token punctuation">.</span><span class="token function">setHtml</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;img style=&quot;height:200px;width:auto;&quot; src=&quot;&#39;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&#39;&quot; /&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>




<span class="token comment">// \u5728\u753B\u5E03\u4E0A\u753B\u51FA\u56FE\u7247\uFF0C\u7136\u540E\u628A\u753B\u5E03\u56FE\u7247\u8F6Cbase64</span>
<span class="token comment">// \u521B\u5EFA\u65B0\u7684Image\u5BF9\u8C61  </span>
<span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
image<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u5F85\u56FE\u7247\u52A0\u8F7D\u5B8C\u6210  </span>
image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2Acanvas\u5143\u7D20\uFF0C\u5E76\u5C06\u56FE\u7247\u7ED8\u5236\u5230canvas\u4E0A  </span>
    <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span>width<span class="token punctuation">,</span> image<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06canvas\u56FE\u7247\u8F6C\u6362\u4E3ABase64\u7F16\u7801\u7684\u5B57\u7B26\u4E32</span>
    <span class="token keyword">const</span> base64Data <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>



<span class="token comment">// \u81EA\u52A8\u4E0B\u8F7D</span>
<span class="token comment">// var downloadelement = document.createElement(&#39;a&#39;);</span>
<span class="token comment">// downloadelement.href = url;</span>
<span class="token comment">// downloadelement.download = &#39;test.png&#39;;</span>
<span class="token comment">// downloadelement.click();</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br></div></div></details>`,15))}var c=s(p,[["render",t],["__file","\u6587\u4EF6.html.vue"]]);export{c as default};
