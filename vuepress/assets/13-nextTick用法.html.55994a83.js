import{_ as s,p as a}from"./app.5c80a7c1.js";const p={};function t(e,n){return n[0]||(n[0]=a(`<h1 id="nexttick\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#nexttick\u65B9\u6CD5" aria-hidden="true">#</a> nextTick\u65B9\u6CD5</h1><blockquote><p>\u901A\u4FD7\u89E3\u91CA\uFF1A \u81F4\u529B\u4E8E\u66F4\u65B0\u4E86\u67D0\u4E00\u4E2A\u7279\u5B9A\u7684\u5C5E\u6027\u503C,\u5B8C\u6210DOM\u66F4\u65B0\u540E,\u89E6\u53D1\u4E8B\u4EF6,\u4E5F\u5C31\u662F\u89E6\u53D1dom\u66F4\u65B0\u540E\u4F1A\u56DE\u8C03\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570; \u6709\u4E86\u5B83,\u53EF\u4EE5\u66FF\u4EE3watch\u7684\u5B9E\u65F6\u76D1\u63A7\u529F\u80FD,\u51CF\u5C11\u7A0B\u5E8F\u7684\u635F\u8017</p></blockquote><h3 id="\u5B98\u65B9\u89E3\u91CA" tabindex="-1"><a class="header-anchor" href="#\u5B98\u65B9\u89E3\u91CA" aria-hidden="true">#</a> \u5B98\u65B9\u89E3\u91CA</h3><blockquote><p>\u89E3\u91CA\uFF1A\u5728\u4E0B\u6B21 DOM \u66F4\u65B0\u5FAA\u73AF\u7ED3\u675F\u4E4B\u540E\u6267\u884C\u5EF6\u8FDF\u56DE\u8C03\u3002\u5728\u4FEE\u6539\u6570\u636E\u4E4B\u540E\u7ACB\u5373\u4F7F\u7528\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u83B7\u53D6\u66F4\u65B0\u540E\u7684 DOM\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F8B\u5B50\uFF1A</span>

<span class="token comment">// \u4FEE\u6539\u6570\u636E</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span>
<span class="token comment">// DOM \u8FD8\u6CA1\u6709\u66F4\u65B0</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// DOM \u66F4\u65B0\u4E86</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

 
<span class="token comment">// \u4F5C\u4E3A\u4E00\u4E2A Promise \u4F7F\u7528 (2.1.0 \u8D77\u65B0\u589E\uFF0C\u8BE6\u89C1\u63A5\u4E0B\u6765\u7684\u63D0\u793A)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// DOM \u66F4\u65B0\u4E86</span>

  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u4F7F\u7528\u573A\u666F</h3><details class="custom-container details"><summary>\u67E5\u770B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u6811\u7EC4\u4EF6: \u641C\u7D22\u6811\u7ED3\u675F\u540E\uFF0C\u4E14\u5B8C\u6210dom\u6811\u66F4\u65B0\u540E\u5C55\u5F00\u6240\u6709\u8282\u70B9</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>treeData <span class="token operator">=</span> <span class="token function">someSearchMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// \u6267\u884C\u5C55\u5F00\u8282\u70B9\u7684\u65B9\u6CD5</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token comment">// 2. \u9875\u9762\u9690\u85CF\u540E\u518D\u6FC0\u6D3B\uFF08\u8BE6\u89C1\u5237\u65B0\u5F53\u524D\u9875\u9762\uFF09</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>isRouterAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token comment">// \u9690\u85CF\u7ED3\u675F\u540E\u91CD\u65B0\u663E\u793A</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isRouterAlive <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>


<span class="token comment">// 3. \u66F4\u591A\u6570\u636E\u6539\u53D8\u540E\u9700\u8981\u53D8\u66F4dom\u624D\u6267\u884C\u7684\u64CD\u4F5C</span>
<span class="token operator">...</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></details><h3 id="nexttick\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#nexttick\u6E90\u7801" aria-hidden="true">#</a> nextTick\u6E90\u7801</h3><details class="custom-container details"><summary>\u67E5\u770B</summary><p>\u89E3\u6790\uFF1A</p><ol><li>return\u7684\u51FD\u6570\uFF08queueNextTick\uFF09\u5C31\u662F\u6211\u4EEC\u5B9E\u9645\u4F7F\u7528\u7684\u95ED\u5305\u51FD\u6570\u3002</li><li>\u5148\u628A\u4E00\u4E9B\u5F02\u6B65\u5904\u7406\u7684\u65B9\u6CD5\u6536\u96C6\u8D77\u6765\uFF08callbacks\uFF09\uFF0C\u7136\u540E\u53BB\u76D1\u542C\u5F53\u524D\u540C\u6B65\u64CD\u4F5C\u4F55\u65F6\u5B8C\u6210\uFF0C\u5B8C\u6210\u4E4B\u540E\u518D\u53BB\u6267\u884C\u90A3\u4E9B\u5F02\u6B65\u56DE\u8C03\u3002</li><li>MutationObserver\uFF08h5\u7279\u6027\uFF09\uFF0C\u5176\u529F\u80FD\u662F\u76D1\u542Cdom\u8282\u70B9\u7684\u53D8\u52A8\uFF0C\u5728\u6240\u6709dom\u53D8\u52A8\u5B8C\u6210\u540E\uFF0C\u6267\u884C\u56DE\u8C03\u51FD\u6570\u3002</li><li>\u7B49\u5F85DOM\u53D8\u52A8\u540E\u7684\u5EF6\u8FDF\u6267\u884C\u51FD\u6570\uFF1A</li></ol><blockquote><p>\u65B9\u5F0F1\uFF1APromise.then()-- \u53EF\u4EE5\u5C06\u51FD\u6570\u5EF6\u8FDF\u5230\u5F53\u524D\u51FD\u6570\u8C03\u7528\u6808\u6700\u672B\u7AEF\uFF0C\u4E5F\u5C31\u662F\u51FD\u6570\u8C03\u7528\u6808\u6700\u540E\u8C03\u7528\u8BE5\u51FD\u6570\uFF0C\u4ECE\u800C\u505A\u5230\u5EF6\u8FDF\u3002<br> \u65B9\u5F0F2\uFF1AsetTimeOut(func,0)--\u5C06func\u51FD\u6570\u5EF6\u8FDF\u5230\u4E0B\u4E00\u6B21\u51FD\u6570\u8C03\u7528\u6808\u7684\u5F00\u59CB\uFF0C\u4E5F\u5C31\u662F\u5F53\u524D\u51FD\u6570\u6267\u884C\u5B8C\u6BD5\u540E\u518D\u6267\u884C\u8BE5\u51FD\u6570\uFF0C\u56E0\u6B64\u5B8C\u6210\u4E86\u5EF6\u8FDF\u529F\u80FD\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
* Defer a task to execute it asynchronously.
*/</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> nextTick <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> pending <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token keyword">let</span> timerFunc<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">nextTickHandler</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pending <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token keyword">const</span> copies <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
      callbacks<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> copies<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          copies<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// the nextTick behavior leverages the microtask queue, which can be accessed</span>
  <span class="token comment">// via either native Promise.then or MutationObserver.</span>
  <span class="token comment">// MutationObserver has wider support, however it is seriously bugged in</span>
  <span class="token comment">// UIWebView in iOS &gt;= 9.3.3 when triggered in touch event handlers. It</span>
  <span class="token comment">// completely stops working after triggering a few times... so, if native</span>
  <span class="token comment">// Promise is available, we will use it:</span>
  <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNative</span><span class="token punctuation">(</span>Promise<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">var</span> <span class="token function-variable function">logError</span> <span class="token operator">=</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">}</span>
        <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>nextTickHandler<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>logError<span class="token punctuation">)</span>
          <span class="token comment">// in problematic UIWebViews, Promise.then doesn&#39;t completely break, but</span>
          <span class="token comment">// it can get stuck in a weird state where callbacks are pushed into the</span>
          <span class="token comment">// microtask queue but the queue isn&#39;t being flushed, until the browser</span>
          <span class="token comment">// needs to do some other work, e.g. handle a timer. Therefore we can</span>
          <span class="token comment">// &quot;force&quot; the microtask queue to be flushed by adding an empty timer.</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>isIOS<span class="token punctuation">)</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>noop<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isIE <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> MutationObserver <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">isNative</span><span class="token punctuation">(</span>MutationObserver<span class="token punctuation">)</span> <span class="token operator">||</span>MutationObserver<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object MutationObserverConstructor]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// use MutationObserver where native Promise is not available,</span>
        <span class="token comment">// e.g. PhantomJS, iOS7, Android 4.4</span>
        <span class="token keyword">var</span> counter <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">var</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span>nextTickHandler<span class="token punctuation">)</span>
        <span class="token keyword">var</span> textNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">)</span>
            observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>textNode<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">characterData</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            counter <span class="token operator">=</span> <span class="token punctuation">(</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span>
            textNode<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// fallback to setTimeout</span>
        <span class="token comment">/* istanbul ignore next */</span>
        <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span>nextTickHandler<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">queueNextTick</span> <span class="token punctuation">(</span><span class="token parameter">cb<span class="token operator">?</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> ctx<span class="token operator">?</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> _resolve
        callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> <span class="token string">&#39;nextTick&#39;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">_resolve</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pending <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token function">timerFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cb <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            _resolve <span class="token operator">=</span> resolve
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div></details>`,9))}var c=s(p,[["render",t],["__file","13-nextTick\u7528\u6CD5.html.vue"]]);export{c as default};
