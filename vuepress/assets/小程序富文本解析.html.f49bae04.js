import{_ as t,k as o,o as c,c as l,p as a,a as s,b as p,l as r,F as u}from"./app.e6691f45.js";const i={},k={href:"https://github.com/F-loat/mpvue-wxParse",target:"_blank",rel:"noopener noreferrer"};function m(b,n){const e=o("ExternalLinkIcon");return c(),l(u,null,[n[3]||(n[3]=a('<h1 id="\u9002\u7528\u4E8Euniapp-\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9002\u7528\u4E8Euniapp-\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F" aria-hidden="true">#</a> \u9002\u7528\u4E8EuniApp / \u5FAE\u4FE1\u5C0F\u7A0B\u5E8F</h1><h3 id="\u5B89\u88C5\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u63D2\u4EF6" aria-hidden="true">#</a> \u5B89\u88C5\u63D2\u4EF6</h3><h4 id="_1-\u4E0B\u8F7D\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#_1-\u4E0B\u8F7D\u63D2\u4EF6" aria-hidden="true">#</a> 1. \u4E0B\u8F7D\u63D2\u4EF6</h4>',3)),s("blockquote",null,[s("p",null,[s("a",k,[n[0]||(n[0]=p("\u4E0B\u8F7D\u63D2\u4EF6-wxParse")),r(e)]),n[1]||(n[1]=s("br",null,null,-1)),n[2]||(n[2]=p(" https://github.com/F-loat/mpvue-wxParse"))])]),n[4]||(n[4]=a(`<h4 id="_2-npm\u5B89\u88C5" tabindex="-1"><a class="header-anchor" href="#_2-npm\u5B89\u88C5" aria-hidden="true">#</a> 2. npm\u5B89\u88C5</h4><blockquote><p>npm i mpvue-wxparse</p></blockquote><h3 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wxParse</span> <span class="token attr-name">:content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>richText<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@preview</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preview<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@navigate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigate<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_1-\u5F15\u5165\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#_1-\u5F15\u5165\u63D2\u4EF6" aria-hidden="true">#</a> 1. \u5F15\u5165\u63D2\u4EF6</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** uniapp\u3001vue */</span>

<span class="token comment">// \u82E5\u653E\u5728\u7EC4\u4EF6\u5E93</span>
<span class="token keyword">import</span> wxParse <span class="token keyword">from</span> <span class="token string">&#39;/components/mpvue-wxparse/src/wxParse.vue&#39;</span>
<span class="token comment">// \u82E5npm\u5B89\u88C5</span>
<span class="token keyword">import</span> wxParse <span class="token keyword">from</span> <span class="token string">&#39;mpvue-wxparse&#39;</span>

<span class="token comment">// \u6CE8\u518C\u7EC4\u4EF6</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    wxParse
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>



<span class="token doc-comment comment">/** \u5C0F\u7A0B\u5E8F\u5B98\u65B9 */</span>

<span class="token comment">// json\u6587\u4EF6</span>
<span class="token string-property property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
   <span class="token string-property property">&quot;wxparse&quot;</span><span class="token operator">:</span><span class="token string">&#39;/components/mpvue-wxparse/src/wxParse.vue&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="_2-\u6570\u636E\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_2-\u6570\u636E\u5904\u7406" aria-hidden="true">#</a> 2. \u6570\u636E\u5904\u7406</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token comment">// \u83B7\u53D6\u5230\u7684\u5BCC\u6587\u672C\u5185\u5BB9</span>
<span class="token keyword">let</span> richText<span class="token punctuation">;</span> 
<span class="token comment">// \u8F6C\u5316\u6210html\u6587\u672C</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>richText<span class="token operator">=</span><span class="token function">getHtml</span><span class="token punctuation">(</span>richText<span class="token punctuation">)</span>

<span class="token comment">// \u8F6C\u5316\u51FD\u6570</span>
<span class="token function">getHtml</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>text<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> text<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token function-variable function">escape2Html</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> arrEntities <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;lt&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;gt&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;nbsp&#39;</span><span class="token operator">:</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;amp&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;quot&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&quot;&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;(lt|gt|nbsp|amp|quot);</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">all<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> arrEntities<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">let</span> <span class="token function-variable function">htmlJzDecode</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str <span class="token operator">||</span> str<span class="token punctuation">.</span>leng <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> str<span class="token punctuation">;</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\@\\@\\@</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\_\\@\\_\\*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/*&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\*\\_\\@\\_</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;*/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\_\\@\\!\\@\\_</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5148\u66FF\u6362html\u6807\u7B7E</span>
    text<span class="token operator">=</span><span class="token function">escape2Html</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u518D\u66FF\u6362\u76F8\u5173@\u6807\u7B7E</span>
    text<span class="token operator">=</span><span class="token function">htmlJzDecode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> text<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div>`,8))],64)}var g=t(i,[["render",m],["__file","\u5C0F\u7A0B\u5E8F\u5BCC\u6587\u672C\u89E3\u6790.html.vue"]]);export{g as default};
