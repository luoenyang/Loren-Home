import{_ as s,p as a}from"./app.e6691f45.js";const p={};function t(e,n){return n[0]||(n[0]=a(`<h1 id="\u57FA\u672C\u793A\u4F8B\u6837\u677F" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u793A\u4F8B\u6837\u677F" aria-hidden="true">#</a> \u57FA\u672C\u793A\u4F8B\u6837\u677F</h1><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><p>\u521B\u5EFAstore</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token comment">// useStore \u53EF\u4EE5\u662F useUser\u3001useCart\u3001useCounterStore \u4E4B\u7C7B\u7684\u4EFB\u4F55\u4E1C\u897F</span>
<span class="token comment">// \u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5E94\u7528\u7A0B\u5E8F\u4E2D store \u7684\u552F\u4E00 id, \u662F\u5FC5\u8981\u7684</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> useCounterStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
   <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">double</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u4F7F\u7528store</p><p>\u4E0D\u4F7F\u7528setup</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mapStores<span class="token punctuation">,</span>mapState<span class="token punctuation">,</span>mapActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">import</span> useCounterStore <span class="token keyword">from</span> <span class="token string">&#39;../stores/useCounterStore&#39;</span>
<span class="token keyword">import</span> useUserStore <span class="token keyword">from</span> <span class="token string">&#39;../stores/useUserStore&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// other computed properties</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// gives access to this.counterStore and this.userStore</span>
    <span class="token operator">...</span><span class="token function">mapStores</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> useUserStore<span class="token punctuation">)</span>
    <span class="token comment">// gives read access to this.count and this.double</span>
    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;double&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// \u4EE5\u4E0B\uFF0Ccount\u662F\u53EF\u4EE5\u88AB\u4FEE\u6539\u7684</span>
    <span class="token operator">...</span><span class="token function">mapWritableState</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// gives access to this.increment()</span>
    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4F7F\u7528setup</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3A\u4E86\u4ECE Store \u4E2D\u63D0\u53D6\u5C5E\u6027\u540C\u65F6\u4FDD\u6301\u5176\u54CD\u5E94\u5F0F\uFF0C\u9700\u8981\u4F7F\u7528storeToRefs()\u3002</span>
<span class="token comment">// \u5426\u5219\u89E3\u6784\u65F6\u4F1A\u7834\u574F\u54CD\u5E94\u5F0F</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> storeToRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useCounterStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/useCounterStore&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useCounterStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \`count\`, \`name\` \u548C \`doubleCount\` \u662F\u54CD\u5E94\u5F0F\u5F15\u7528</span>
    <span class="token comment">// \u8FD9\u4E5F\u4F1A\u4E3A\u63D2\u4EF6\u6DFB\u52A0\u7684\u5C5E\u6027\u521B\u5EFA\u5F15\u7528</span>
    <span class="token comment">// \u4F46\u8DF3\u8FC7\u4EFB\u4F55 action \u6216 \u975E\u54CD\u5E94\u5F0F\uFF08\u4E0D\u662F ref/reactive\uFF09\u7684\u5C5E\u6027</span>
    <span class="token comment">// \u8FD9\u6837\u5373\u63D0\u53D6\u5C5E\u6027\u540C\u65F6\u4FDD\u6301\u5176\u54CD\u5E94\u5F0F</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span>name<span class="token punctuation">,</span> doubleCount <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span>
    
    <span class="token comment">// \u53EF\u76F4\u63A5\u64CD\u4F5Cstore\u4E2D\u7684\u65B9\u6CD5\uFF08\u5373 actions\uFF09</span>
    store<span class="token punctuation">.</span><span class="token function">randomizeCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      count<span class="token punctuation">,</span>
      name<span class="token punctuation">,</span>
      doubleCount
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></details><h1 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> state</h1><p>\u5B9A\u4E49</p><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">const</span> useStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;storeId&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u63A8\u8350\u4F7F\u7528 \u5B8C\u6574\u7C7B\u578B\u63A8\u65AD\u7684\u7BAD\u5934\u51FD\u6570</span>
  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6240\u6709\u8FD9\u4E9B\u5C5E\u6027\u90FD\u5C06\u81EA\u52A8\u63A8\u65AD\u5176\u7C7B\u578B</span>
      <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Eduardo&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">isAdmin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></details><p>\u8BBF\u95EEstate(\u8BFB\u53D6\u3001\u5199\u5165\u3001\u91CD\u7F6E\u3001\u66FF\u6362\u3001\u8BA2\u9605)</p><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/useStore&#39;</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u4FEE\u6539state</span>
store<span class="token punctuation">.</span>counter<span class="token operator">++</span>
<span class="token comment">// \u4F7F\u7528 $patch \u4FEE\u6539state</span>
store<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">counter</span><span class="token operator">:</span> store<span class="token punctuation">.</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Abalam&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E5F\u53EF\u8FD9\u6837</span>
store<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  state<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;shoes&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  state<span class="token punctuation">.</span>hasChanged <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u91CD\u7F6Estore</span>
store<span class="token punctuation">.</span><span class="token function">$reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u66FF\u6362</span>
store<span class="token punctuation">.</span>$state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">666</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Paimon&#39;</span> <span class="token punctuation">}</span>

<span class="token comment">// \u8BA2\u9605 \u7C7B\u4F3Cwatch</span>
store<span class="token punctuation">.</span><span class="token function">$subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutation<span class="token punctuation">,</span> state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// import { MutationType } from &#39;pinia&#39;</span>
  mutation<span class="token punctuation">.</span>type <span class="token comment">// &#39;direct&#39; | &#39;patch object&#39; | &#39;patch function&#39;</span>

  <span class="token comment">// \u4E0E cartStore.$id \u76F8\u540C</span>
  mutation<span class="token punctuation">.</span>storeId 

  <span class="token comment">// \u4EC5\u9002\u7528\u4E8E mutation.type === &#39;patch object&#39;</span>
  mutation<span class="token punctuation">.</span>payload <span class="token comment">// \u8865\u4E01\u5BF9\u8C61\u4F20\u9012\u7ED9 to cartStore.$patch()</span>

  <span class="token comment">// \u6BCF\u5F53\u5B83\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u5C06\u6574\u4E2A\u72B6\u6001\u6301\u4E45\u5316\u5230\u672C\u5730\u5B58\u50A8</span>
<span class="token comment">//   localStorage.setItem(&#39;cart&#39;, JSON.stringify(state))</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div></details><h1 id="getters" tabindex="-1"><a class="header-anchor" href="#getters" aria-hidden="true">#</a> getters</h1><ul><li>Getter \u5B8C\u5168\u7B49\u540C\u4E8E Store \u72B6\u6001\u7684 \u8BA1\u7B97\u503C\u3002</li><li>\u53EF\u4F20\u53C2\uFF0C\u8FD8\u53EF\u4F7F\u7528\u5176\u5B83store\u7684\u53C2\u6570\u3002</li><li>\u76F4\u63A5\u5728 store \u5B9E\u4F8B\u4E0A\u8BBF\u95EE getter\u3002</li></ul><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><p>\u5B9A\u4E49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> useStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7C7B\u578B\u662F\u81EA\u52A8\u63A8\u65AD\u7684\uFF0C\u56E0\u4E3A\u6211\u4EEC\u6CA1\u6709\u4F7F\u7528 \`this\`</span>
    <span class="token function-variable function">doubleCount</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>counter <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8FD9\u91CC\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u6DFB\u52A0\u7C7B\u578B\uFF08\u5728 JS \u4E2D\u4F7F\u7528 JSDoc\uFF09\u3002 \u6211\u4EEC\u8FD8\u53EF\u4EE5</span>
    <span class="token comment">// \u4F7F\u7528\u5B83\u6765\u8BB0\u5F55 getter</span>
    <span class="token doc-comment comment">/**
     * \u8FD4\u56DE\u8BA1\u6570\u5668\u503C\u4E58\u4EE5\u4E8C\u52A0\u4E00\u3002
     *
     * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
     */</span>
    <span class="token function">doubleCountPlusOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u81EA\u52A8\u5B8C\u6210 \u2728</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>doubleCount <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u4F7F\u7528</p><p>setup</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../stores/useStore&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> useStore <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">quadrupleCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> useStore<span class="token punctuation">.</span>doubleCount <span class="token operator">*</span> <span class="token number">2</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6CA1\u6709setup</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mapState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../stores/useStore&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5141\u8BB8\u8BBF\u95EE\u7EC4\u4EF6\u5185\u7684 this.doubleCounter</span>
    <span class="token comment">// \u4E0E\u4ECE store.doubleCounter \u4E2D\u8BFB\u53D6\u76F8\u540C</span>
    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span>useStore<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;doubleCount&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4E0E\u4E0A\u9762\u76F8\u540C\uFF0C\u4F46\u5C06\u5176\u6CE8\u518C\u4E3A this.myOwnName</span>
    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span>useStore<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">myOwnName</span><span class="token operator">:</span> <span class="token string">&#39;doubleCounter&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// \u60A8\u8FD8\u53EF\u4EE5\u7F16\u5199\u4E00\u4E2A\u8BBF\u95EE store \u7684\u51FD\u6570</span>
      <span class="token function-variable function">double</span><span class="token operator">:</span> <span class="token parameter">store</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>doubleCount<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details><h1 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> actions</h1><ul><li>Actions \u76F8\u5F53\u4E8E\u7EC4\u4EF6\u4E2D\u7684 methods\u3002</li></ul><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><p>\u5B9A\u4E49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> useUsers <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">userData</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment">// \u53EF\u4EE5\u662F\u5F02\u6B65\u7684</span>
  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">registerUser</span><span class="token punctuation">(</span><span class="token parameter">login<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// this.userData = await ...</span>
       
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> error
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8C03\u7528</p><p>setup</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
store<span class="token punctuation">.</span><span class="token function">someAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6CA1\u6709setup</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>mport <span class="token punctuation">{</span> mapActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useCounterStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../stores/counterStore&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// gives access to this.increment() inside the component</span>
    <span class="token comment">// same as calling from store.increment()</span>
    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// same as above but registers it as this.myOwnName()</span>
    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">myOwnName</span><span class="token operator">:</span> <span class="token string">&#39;doubleCounter&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8BA2\u9605</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> someStore <span class="token operator">=</span> <span class="token function">useSomeStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// \u56DE\u8C03\u53C2\u6570</span>
    <span class="token comment">// name, // action \u7684\u540D\u5B57</span>
    <span class="token comment">// store, // store \u5B9E\u4F8B</span>
    <span class="token comment">// args, // \u8C03\u7528\u8FD9\u4E2A action \u7684\u53C2\u6570</span>
    <span class="token comment">// after, // \u5728\u8FD9\u4E2A action \u6267\u884C\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u6267\u884C\u8FD9\u4E2A\u51FD\u6570</span>
    <span class="token comment">// onError, // \u5728\u8FD9\u4E2A action \u629B\u51FA\u5F02\u5E38\u7684\u65F6\u5019\uFF0C\u6267\u884C\u8FD9\u4E2A\u51FD\u6570</span>

    <span class="token comment">// true: \u4F20\u9012\u7ED9\u5F53\u524D\u7EC4\u4EF6\u7684 detach action subscription</span>
    someStore<span class="token punctuation">.</span><span class="token function">$onAction</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details><h1 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> plugins</h1><p>\u4F7F\u7528 pinia.use()\u5C06\u63D2\u4EF6\u6DFB\u52A0\u5230 pinia \u5B9E\u4F8B\u4E2D\u3002</p><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><ul><li>\u5411 Store \u6DFB\u52A0\u65B0\u5C5E\u6027\uFF08\u7279\u522B\u662F\u6DFB\u52A0\u5168\u5C40\u5BF9\u8C61\u5F88\u6709\u7528\uFF09</li><li>\u5B9A\u4E49 Store \u65F6\u6DFB\u52A0\u65B0\u9009\u9879</li><li>\u4E3A Store \u6DFB\u52A0\u65B0\u65B9\u6CD5</li><li>\u5305\u88C5\u73B0\u6709\u65B9\u6CD5</li><li>\u66F4\u6539\u751A\u81F3\u53D6\u6D88\u64CD\u4F5C</li><li>\u5B9E\u73B0\u672C\u5730\u5B58\u50A8\u7B49\u526F\u4F5C\u7528</li></ul><p>\u793A\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPinia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token comment">// \u4E3A\u5B89\u88C5\u6B64\u63D2\u4EF6\u540E\u521B\u5EFA\u7684\u6BCF\u4E2Astore\u6DFB\u52A0\u4E00\u4E2A\u540D\u4E3A \`secret\` \u7684\u5C5E\u6027</span>
<span class="token comment">// \u8FD9\u53EF\u80FD\u5728\u4E0D\u540C\u7684\u6587\u4EF6\u4E2D</span>
<span class="token keyword">function</span> <span class="token function">SecretPiniaPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">&#39;the cake is a lie&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u5C06\u63D2\u4EF6\u63D0\u4F9B\u7ED9 pinia</span>
pinia<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>SecretPiniaPlugin<span class="token punctuation">)</span>

<span class="token comment">// \u5728\u53E6\u4E00\u4E2A\u6587\u4EF6\u4E2D</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
store<span class="token punctuation">.</span>secret <span class="token comment">// &#39;the cake is a lie&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Pinia \u63D2\u4EF6\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u53EF\u4EE5\u9009\u62E9\u8FD4\u56DE\u8981\u6DFB\u52A0\u5230 store \u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">myPiniaPlugin</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  context<span class="token punctuation">.</span>pinia <span class="token comment">// \u4F7F\u7528 \`createPinia()\` \u521B\u5EFA\u7684 pinia</span>
  context<span class="token punctuation">.</span>app <span class="token comment">// \u4F7F\u7528 \`createApp()\` \u521B\u5EFA\u7684\u5F53\u524D\u5E94\u7528\u7A0B\u5E8F\uFF08\u4EC5\u9650 Vue 3\uFF09</span>
  context<span class="token punctuation">.</span>store <span class="token comment">// \u63D2\u4EF6\u6B63\u5728\u6269\u5145\u7684 store</span>
  context<span class="token punctuation">.</span>options <span class="token comment">// \u5B9A\u4E49\u5B58\u50A8\u7684\u9009\u9879\u5BF9\u8C61\u4F20\u9012\u7ED9\`defineStore()\`</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
pinia<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>myPiniaPlugin<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7B80\u5199</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>pinia<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> store <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  store<span class="token punctuation">.</span>hello <span class="token operator">=</span> <span class="token string">&#39;world&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>pinia<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">hello</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><h1 id="ssr-\u670D\u52A1\u7AEF\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#ssr-\u670D\u52A1\u7AEF\u6E32\u67D3" aria-hidden="true">#</a> SSR(\u670D\u52A1\u7AEF\u6E32\u67D3)</h1><ul><li>vue and vite (\u51FA\u4E8E\u5B89\u5168\u539F\u56E0\uFF0C\u60A8\u5E94\u8BE5\u8F6C\u4E49\u72B6\u6001)</li><li>nuxt.js (\u4E0D\u9700\u8981\u5173\u5FC3\u5E8F\u5217\u5316\u6216 XSS \u653B\u51FB\uFF0C\u56E0\u4E3A Nuxt \u5DF2\u7ECF\u5904\u7406\u4E86\u8FD9\u4E9B)</li><li>\u5171\u540C\u70B9\uFF1A\u5728 setup() \u4E4B\u5916\u4F7F\u7528\u5B58\u50A8\uFF0C\u9700\u8981\u5C06 pinia \u5B9E\u4F8B \u5DF2\u4F20\u9012\u7ED9\u5E94\u7528\u7A0B\u5E8F \u4F20\u9012\u7ED9 useStore() \u51FD\u6570\u8C03\u7528</li></ul><details class="custom-container details"><summary>\u4EE3\u7801\u793A\u4F8B</summary><h3 id="vue-and-vite" tabindex="-1"><a class="header-anchor" href="#vue-and-vite" aria-hidden="true">#</a> vue and vite</h3><p>\u53EA\u8981\u5728 setup \u51FD\u6570\u3001getters \u548C actions \u7684\u9876\u90E8\u8C03\u7528 useStore() \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u662F\u6709\u6548\u7684\uFF0C\u56E0\u4E3A pinia \u77E5\u9053\u91CC\u9762\u8FD0\u884C\u7684\u662F\u4EC0\u4E48\u5E94\u7528\u7A0B\u5E8F</span>
    <span class="token keyword">const</span> main <span class="token operator">=</span> <span class="token function">useMainStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> main <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="nuxt-js" tabindex="-1"><a class="header-anchor" href="#nuxt-js" aria-hidden="true">#</a> Nuxt.js</h3><p>\u5B89\u88C5</p><p>\u786E\u4FDD\u5728 pinia \u65C1\u8FB9\u5B89\u88C5 @nuxtjs/composition-api</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> pinia @pinia/nuxt @nuxtjs/composition-api
<span class="token comment"># \u6216\u4F7F\u7528 npm</span>
<span class="token function">npm</span> <span class="token function">install</span> pinia @pinia/nuxt @nuxtjs/composition-api
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u9700\u5C06\u5176\u6DFB\u52A0\u5230\u60A8\u7684 nuxt.config.js \u6587\u4EF6\u4E2D\u7684 build Modules \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// nuxt.config.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ... other options</span>
  <span class="token literal-property property">buildModules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// Nuxt 2 only:</span>
    <span class="token comment">// https://composition-api.nuxtjs.org/getting-started/setup#quick-start</span>
    <span class="token string">&#39;@nuxtjs/composition-api/module&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;@pinia/nuxt&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u5728-setup-\u4E4B\u5916\u4F7F\u7528\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#\u5728-setup-\u4E4B\u5916\u4F7F\u7528\u5B58\u50A8" aria-hidden="true">#</a> \u5728 setup() \u4E4B\u5916\u4F7F\u7528\u5B58\u50A8</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u2705 \u8FD9\u5C06\u786E\u4FDD\u6B63\u786E\u7684\u5546\u5E97\u7528\u4E8E</span>
  <span class="token comment">// \u5F53\u524D\u8FD0\u884C\u7684\u5E94\u7528</span>
  <span class="token keyword">const</span> main <span class="token operator">=</span> <span class="token function">useMainStore</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>requiresAuth <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>main<span class="token punctuation">.</span>isLoggedIn<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;/login&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;~/stores/myStore&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">asyncData</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> $pinia <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span>$pinia<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></details>`,19))}var c=s(p,[["render",t],["__file","\u4F7F\u7528.html.vue"]]);export{c as default};
